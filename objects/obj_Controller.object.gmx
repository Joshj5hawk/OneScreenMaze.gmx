<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Virtual Keys

//local vars
width = sprite_get_width(spr_FourDirection);
height = sprite_get_height(spr_FourDirection);

//dpad coords
dpad_X = 16;
dpad_Y = display_get_gui_height() - height - 16;

//VKeys
//if(os_type != os_windows)
{
     global.vkey_W = virtual_key_add(100, 468, 80, 80, ord('W'));
     global.vkey_A = virtual_key_add(20, 548, 80, 80, ord('A'));
     global.vkey_D = virtual_key_add(180, 548, 80 , 80, ord('D'));
     global.vkey_S = virtual_key_add(100, 628 , 80, 80,ord('S'));
     
     global.vkey_Esc = virtual_key_add(1200, 16, 80, 80, vk_escape);
     global.vkey_Shift = virtual_key_add(1080, 620, 75, 75, vk_shift);
     global.vkey_R = virtual_key_add(1100, 16, 80, 80, ord('R'));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Find Best Time
ini_open("records.sav")
var global.bestTime = ini_read_real("Times", room_get_name(room), 0);
ini_close();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show VKeys
     if(global.debugMode == true)
     {
          virtual_key_show(global.vkey_W);
          virtual_key_show(global.vkey_A);
          virtual_key_show(global.vkey_D);
          virtual_key_show(global.vkey_S);
          
          virtual_key_show(global.vkey_Shift);
          virtual_key_show(global.vkey_Esc);
          virtual_key_show(global.vkey_R);
     }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increment Timer
if(global.canCount = true)
{
     global.seconds += 1/room_speed;
}

if((global.seconds &lt; 60) &amp;&amp; (global.seconds &gt; 59.9))
{
     global.seconds = 0;
     global.minutes += 1;
}
if(global.minutes == 60)
{
     global.minutes = 0;
     global.hours += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Timer
global.seconds = 0;
global.minutes = 0;
global.hours = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw D-Pad and other controlls

display_set_gui_size(1280,720);
//if os_type != os_windows
{
     draw_sprite_ext(spr_FourDirection, 0, 32, 468, 1, 1, 0, c_white, 0.5);
     draw_sprite(spr_Pause, 0, 1200, 16);
     draw_sprite(spr_Restart, 0, 1100, 16);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Current Timer
draw_set_font(fnt_Timer);
draw_set_colour(c_white);
draw_set_halign(fa_center);
//00:00:00
//hh:mm:ss
if(global.seconds &lt; 10) &amp;&amp; (global.minutes &lt; 10)
{
     draw_text(1056, 0, "Current Time " + string(global.hours) + ":0" + string(global.minutes) + ":0" + string(global.seconds));
}
else if(global.seconds &gt;= 10) &amp;&amp; (global.minutes &gt;= 10)
{
     draw_text(1056, 0, "Current Time " + string(global.hours) + ":" + string(global.minutes) + ":" + string(global.seconds));
}
else if(global.seconds &lt; 10) &amp;&amp; (global.minutes &gt;= 10)
{
     draw_text(1056, 0, "Current Time " + string(global.hours) + ":" + string(global.minutes) + ":0" + string(global.seconds));
}
else if(global.seconds &gt;= 10) &amp;&amp; (global.minutes &lt; 10)
{
     draw_text(1056, 0, "Current Time " + string(global.hours) + ":0" + string(global.minutes) + ":" + string(global.seconds));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Last Room Time
///Draw Last Timer
draw_set_font(fnt_Timer);
draw_set_colour(c_white);
draw_set_halign(fa_center);
//00:00:00
//hh:mm:ss
if(global.lastSeconds &lt; 10) &amp;&amp; (global.lastMinutes &lt; 10)
{
     draw_text(1056, 16, "Last Time " + string(global.lastHours) + ":0" + string(global.lastMinutes) + ":0" + string(global.lastSeconds));
}
else if(global.lastSeconds &gt;= 10) &amp;&amp; (global.lastMinutes &gt;= 10)
{
     draw_text(1056, 16, "Last Time " + string(global.lastHours) + ":" + string(global.lastMinutes) + ":" + string(global.lastSeconds));
}
else if(global.lastSeconds &lt; 10) &amp;&amp; (global.lastMinutes &gt;= 10)
{
     draw_text(1056, 16, "Last Time " + string(global.lastHours) + ":" + string(global.lastMinutes) + ":0" + string(global.lastSeconds));
}
else if(global.lastSeconds &gt;= 10) &amp;&amp; (global.lastMinutes &lt; 10)
{
     draw_text(1056, 16, "Last Time " + string(global.lastHours) + ":0" + string(global.lastMinutes) + ":" + string(global.lastSeconds));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Best Room Time
///Draw Best Timer
draw_set_font(fnt_Timer);
draw_set_colour(c_white);
draw_set_halign(fa_center);

draw_text(1056, 48, string(global.bestTime));


var global.bestSeconds = 34;
var global.bestMinutes = 8;
var global.bestHours = 3;

//00:00:00
//hh:mm:ss
if(global.bestSeconds &lt; 10) &amp;&amp; (global.bestMinutes &lt; 10)
{
     draw_text(1056, 32, "Best Time " + string(global.bestHours) + ":0" + string(global.bestMinutes) + ":0" + string(global.bestSeconds));
}
else if(global.bestSeconds &gt;= 10) &amp;&amp; (global.bestMinutes &gt;= 10)
{
     draw_text(1056, 32, "Best Time " + string(global.bestHours) + ":" + string(global.bestMinutes) + ":" + string(global.bestSeconds));
}
else if(global.bestSeconds &lt; 10) &amp;&amp; (global.bestMinutes &gt;= 10)
{
     draw_text(1056, 32, "Best Time " + string(global.bestHours) + ":" + string(global.bestMinutes) + ":0" + string(global.bestSeconds));
}
else if(global.bestSeconds &gt;= 10) &amp;&amp; (global.bestMinutes &lt; 10)
{
     draw_text(1056, 32, "Best Time " + string(global.bestHours) + ":0" + string(global.bestMinutes) + ":" + string(global.bestSeconds));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
